version: '3.8'

services:
  mongo1:
    image: mongo:6
    container_name: mongo1
    hostname: mongo1
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo1_data:/data/db
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]

  mongo2:
    image: mongo:6
    container_name: mongo2
    hostname: mongo2
    ports:
      - 27018:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo2_data:/data/db
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]

  mongo3:
    image: mongo:6
    container_name: mongo3
    hostname: mongo3
    ports:
      - 27019:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo3_data:/data/db
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]

  mongo-setup:
    image: mongo:6
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./init-replica.js:/docker-entrypoint-initdb.d/init-replica.js
    entrypoint: >
      bash -c "
        sleep 10 &&
        mongo --host mongo1 --username root --password example --authenticationDatabase admin /docker-entrypoint-initdb.d/init-replica.js
      "

  mynest:
    build: .
    image: mynest:latest
    container_name: mynest
    ports:
      - "3000:3000"
    depends_on:
      - mongo-setup
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://root:example@mongo1:27017,mongo2:27017,mongo3:27017/mydb?replicaSet=rs0&authSource=admin

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
